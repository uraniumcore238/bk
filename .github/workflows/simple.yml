name: Test

#on:
#  push:
#    branches:
#      - "master"
#jobs:
#  test:
#    name: Test
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up Python 3.x
#        uses: actions/setup-python@v2
#        with:
#          python-version: '3.x'
#      - name: Install dependencies
#        run: |
#          pip install -r requirements.txt
#      - name: Install dependencies
#        run: |
#          pytest --alluredir=allure-results
#          pytest tests/api/
#      - name: Get Allure history
#        uses: actions/checkout@v2
#        if: always()
#        continue-on-error: true
#        with:
#          ref: gh-pages
#          path: gh-pages
#      - name: Allure Report action from marketplace
#        uses: simple-elf/allure-report-action@master
#        if: always()
#        with:
#          allure_results: allure-results
#          allure_history: allure-history
#          keep_reports: 20
#      - name: Deploy report to Github Pages
#        if: always()
#        uses: peaceiris/actions-gh-pages@v2
#        env:
#          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          PUBLISH_BRANCH: gh-pages
#          PUBLISH_DIR: allure-history



on:
  push:
    branches:
      - "master"
jobs:
  tests:
    name: Run python tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - run: pip install -r requirements.txt
      - run: pytest tests/api
  allure:
    name: Create allure report
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - run: |
          pip install -r requirements.txt
          pytest --alluredir=allure-results





#jobs:
#  tests_high:
#    name: Run high priority tests
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-python@v4
#        with:
#          python-version: '3.10'
#      - run: pip install -r requirements.txt
#      - run: pytest tests/ -v -m "priority_high"
#
#  tests_all:
#    name: Run other tests
#    runs-on: ubuntu-latest
#    needs: tests_high
#    strategy:
#      matrix:
#        suite: ["desktop", "mobile", "api", "integration"]
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-python@v4
#        with:
#          python-version: '3.10'
#      - run: pip install -r requirements.txt
#      - run: pytest tests/ -v -m "not priority_high and ${{ matrix.suite }}"