{"uid":"1c0b3e279424d254","name":"test_desktop_visibility_footer_developers[setup_browser0]","fullName":"tests.ui.test_footer_elements_visibility.TestFooterElementsVisibility#test_desktop_visibility_footer_developers","historyId":"0d1636b11e7dad598fdc84c6f66db4de","time":{"start":1677428787435,"stop":1677428791676,"duration":4241},"status":"failed","statusMessage":"selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 4s, while waiting for:\nbrowser.element(('css selector', \"[class*='footer']\")).element(('css selector', \"[href='/developers/docs']\")).has exact text Developers\n\nReason: NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[href='/developers/docs']\"}\n  (Session info: chrome=110.0.5481.100)\nStacktrace:\n#0 0x556e80322d93 <unknown>\n#1 0x556e800f12d7 <unknown>\n#2 0x556e8012dcaa <unknown>\n#3 0x556e8012ddb1 <unknown>\n#4 0x556e80122986 <unknown>\n#5 0x556e8015161d <unknown>\n#6 0x556e80122873 <unknown>\n#7 0x556e8015181e <unknown>\n#8 0x556e80169619 <unknown>\n#9 0x556e80151353 <unknown>\n#10 0x556e80120e40 <unknown>\n#11 0x556e80122038 <unknown>\n#12 0x556e803768be <unknown>\n#13 0x556e8037a8f0 <unknown>\n#14 0x556e8035af90 <unknown>\n#15 0x556e8037bb7d <unknown>\n#16 0x556e8034c578 <unknown>\n#17 0x556e803a0348 <unknown>\n#18 0x556e803a04d6 <unknown>\n#19 0x556e803ba341 <unknown>\n#20 0x7f286b630b43 <unknown>\n\nScreenshot: file:///home/runner/.selene/screenshots/1677428773446/1677428773448.png\nPageSource: file:///home/runner/.selene/screenshots/1677428773446/1677428773448.html","statusTrace":"self = <selene.core.wait.Wait object at 0x7fa67a740fd0>\nfn = <selene.core.conditions.ElementCondition object at 0x7fa67a740f10>\n\n    def for_(self, fn: Callable[[E], R]) -> R:\n        finish_time = time.time() + self._timeout\n    \n        while True:\n            try:\n>               return fn(self._entity)\n\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selene/core/wait.py:102: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selene.core.conditions.ElementCondition object at 0x7fa67a740f10>\nentity = <selene.core.entity.Element object at 0x7fa67aa9dfc0>\n\n    def __call__(self, entity: E) -> None:\n>       return self._fn(entity)\n\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selene/core/condition.py:151: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nentity = <selene.core.entity.Element object at 0x7fa67aa9dfc0>\n\n    def fn(entity: E) -> None:\n        query_to_str = str(query)\n        result = (\n            query.__name__\n            if query_to_str.startswith('<function')\n            else query_to_str\n        )\n>       actual = query(entity)\n\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selene/core/condition.py:122: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selene.core.wait.Query object at 0x7fa67ae1b880>\nentity = <selene.core.entity.Element object at 0x7fa67aa9dfc0>\n\n    def __call__(self, entity: T) -> R:\n>       return self._fn(entity)\n\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selene/core/wait.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nelement = <selene.core.entity.Element object at 0x7fa67aa9dfc0>\n\n>   text: Query[Element, str] = Query('text', lambda element: element().text)\n\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selene/core/query.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selene.core.entity.Element object at 0x7fa67aa9dfc0>\n\n    def __call__(self) -> WebElement:\n>       return self._locator()\n\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selene/core/entity.py:178: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selene.core.locator.Locator object at 0x7fa67aa9db70>\n\n    def __call__(self) -> T:\n>       return self._locate()\n\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selene/core/locator.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>       Locator(f'{self}.element({by})', lambda: self().find_element(*by)),\n        self.config,\n    )\n\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selene/core/entity.py:231: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.webelement.WebElement (session=\"25fd33bd0fe8ea49be1a4a95a5ff8f54\", element=\"0e34a2f6-0799-488e-90b1-d7f1cbd07b59\")>\nby = 'css selector', value = \"[href='/developers/docs']\"\n\n    def find_element(self, by=By.ID, value=None):\n        \"\"\"\n        Find an element given a By strategy and locator.\n    \n        :Usage:\n            ::\n    \n                element = element.find_element(By.ID, 'foo')\n    \n        :rtype: WebElement\n        \"\"\"\n        if by == By.ID:\n            by = By.CSS_SELECTOR\n            value = '[id=\"%s\"]' % value\n        elif by == By.CLASS_NAME:\n            by = By.CSS_SELECTOR\n            value = \".%s\" % value\n        elif by == By.NAME:\n            by = By.CSS_SELECTOR\n            value = '[name=\"%s\"]' % value\n    \n>       return self._execute(Command.FIND_CHILD_ELEMENT,\n                             {\"using\": by, \"value\": value})['value']\n\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:796: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.webelement.WebElement (session=\"25fd33bd0fe8ea49be1a4a95a5ff8f54\", element=\"0e34a2f6-0799-488e-90b1-d7f1cbd07b59\")>\ncommand = 'findChildElement'\nparams = {'id': '0e34a2f6-0799-488e-90b1-d7f1cbd07b59', 'sessionId': '25fd33bd0fe8ea49be1a4a95a5ff8f54', 'using': 'css selector', 'value': \"[href='/developers/docs']\"}\n\n    def _execute(self, command, params=None):\n        \"\"\"Executes a command against the underlying HTML element.\n    \n        Args:\n          command: The name of the command to _execute as a string.\n          params: A dictionary of named parameters to send with the command.\n    \n        Returns:\n          The command's JSON response loaded into a dictionary object.\n        \"\"\"\n        if not params:\n            params = {}\n        params['id'] = self._id\n>       return self._parent.execute(command, params)\n\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:773: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.webdriver.WebDriver (session=\"25fd33bd0fe8ea49be1a4a95a5ff8f54\")>\ndriver_command = 'findChildElement'\nparams = {'id': '0e34a2f6-0799-488e-90b1-d7f1cbd07b59', 'using': 'css selector', 'value': \"[href='/developers/docs']\"}\n\n    def execute(self, driver_command: str, params: dict = None) -> dict:\n        \"\"\"\n        Sends a command to be executed by a command.CommandExecutor.\n    \n        :Args:\n         - driver_command: The name of the command to execute as a string.\n         - params: A dictionary of named parameters to send with the command.\n    \n        :Returns:\n          The command's JSON response loaded into a dictionary object.\n        \"\"\"\n        if self.session_id:\n            if not params:\n                params = {'sessionId': self.session_id}\n            elif 'sessionId' not in params:\n                params['sessionId'] = self.session_id\n    \n        params = self._wrap_value(params)\n        response = self.command_executor.execute(driver_command, params)\n        if response:\n>           self.error_handler.check_response(response)\n\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:430: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fa67aa85240>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#18 0x556e803a04d6 \\\\u003Cunknown>\\\\n#19 0x556e803ba341 \\\\u003Cunknown>\\\\n#20 0x7f286b630b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[href='/developers/docs']\"}\nE         (Session info: chrome=110.0.5481.100)\nE       Stacktrace:\nE       #0 0x556e80322d93 <unknown>\nE       #1 0x556e800f12d7 <unknown>\nE       #2 0x556e8012dcaa <unknown>\nE       #3 0x556e8012ddb1 <unknown>\nE       #4 0x556e80122986 <unknown>\nE       #5 0x556e8015161d <unknown>\nE       #6 0x556e80122873 <unknown>\nE       #7 0x556e8015181e <unknown>\nE       #8 0x556e80169619 <unknown>\nE       #9 0x556e80151353 <unknown>\nE       #10 0x556e80120e40 <unknown>\nE       #11 0x556e80122038 <unknown>\nE       #12 0x556e803768be <unknown>\nE       #13 0x556e8037a8f0 <unknown>\nE       #14 0x556e8035af90 <unknown>\nE       #15 0x556e8037bb7d <unknown>\nE       #16 0x556e8034c578 <unknown>\nE       #17 0x556e803a0348 <unknown>\nE       #18 0x556e803a04d6 <unknown>\nE       #19 0x556e803ba341 <unknown>\nE       #20 0x7f286b630b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:247: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.ui.test_footer_elements_visibility.TestFooterElementsVisibility object at 0x7fa67aabbca0>\nopen_main_page = None\n\n    @allure.severity('Blocker')\n    @allure.label(\"owner\", \"uraniumcore238\")\n    @allure.story('Visibility elements on discord.com page')\n    def test_desktop_visibility_footer_developers(self, open_main_page):\n        with allure.step('Assert text in element'):\n>           BasePage.assert_exact_text_in_element(self, MainPage.developers_footer, 'Developers')\n\ntests/ui/test_footer_elements_visibility.py:98: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/base_page.py:14: in assert_exact_text_in_element\n    el.should(have.exact_text(text))\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selene/core/entity.py:539: in should\n    super().should(condition)\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selene/core/entity.py:126: in should\n    self.wait.for_(condition)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selene.core.wait.Wait object at 0x7fa67a740fd0>\nfn = <selene.core.conditions.ElementCondition object at 0x7fa67a740f10>\n\n        def for_(self, fn: Callable[[E], R]) -> R:\n            finish_time = time.time() + self._timeout\n    \n            while True:\n                try:\n                    return fn(self._entity)\n                except Exception as reason:\n                    if time.time() > finish_time:\n    \n                        reason_message = str(reason)\n    \n                        reason_string = '{name}: {message}'.format(\n                            name=reason.__class__.__name__, message=reason_message\n                        )\n                        # todo: think on how can we improve logging failures in selene, e.g. reverse msg and stacktrace\n                        # stacktrace = getattr(reason, 'stacktrace', None)\n                        timeout = self._timeout\n                        entity = self._entity\n    \n                        failure = TimeoutException(\n                            f'''\n    \n    Timed out after {timeout}s, while waiting for:\n    {entity}.{fn}\n    \n    Reason: {reason_string}'''\n                        )\n    \n>                       raise self._hook_failure(failure)\nE                       selene.core.exceptions.TimeoutException: Message: \nE                       \nE                       Timed out after 4s, while waiting for:\nE                       browser.element(('css selector', \"[class*='footer']\")).element(('css selector', \"[href='/developers/docs']\")).has exact text Developers\nE                       \nE                       Reason: NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[href='/developers/docs']\"}\nE                         (Session info: chrome=110.0.5481.100)\nE                       Stacktrace:\nE                       #0 0x556e80322d93 <unknown>\nE                       #1 0x556e800f12d7 <unknown>\nE                       #2 0x556e8012dcaa <unknown>\nE                       #3 0x556e8012ddb1 <unknown>\nE                       #4 0x556e80122986 <unknown>\nE                       #5 0x556e8015161d <unknown>\nE                       #6 0x556e80122873 <unknown>\nE                       #7 0x556e8015181e <unknown>\nE                       #8 0x556e80169619 <unknown>\nE                       #9 0x556e80151353 <unknown>\nE                       #10 0x556e80120e40 <unknown>\nE                       #11 0x556e80122038 <unknown>\nE                       #12 0x556e803768be <unknown>\nE                       #13 0x556e8037a8f0 <unknown>\nE                       #14 0x556e8035af90 <unknown>\nE                       #15 0x556e8037bb7d <unknown>\nE                       #16 0x556e8034c578 <unknown>\nE                       #17 0x556e803a0348 <unknown>\nE                       #18 0x556e803a04d6 <unknown>\nE                       #19 0x556e803ba341 <unknown>\nE                       #20 0x7f286b630b43 <unknown>\nE                       \nE                       Screenshot: file:///home/runner/.selene/screenshots/1677428773446/1677428773448.png\nE                       PageSource: file:///home/runner/.selene/screenshots/1677428773446/1677428773448.html\n\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selene/core/wait.py:125: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"load_env","time":{"start":1677428773600,"stop":1677428773600,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setup_browser","time":{"start":1677428773845,"stop":1677428779864,"duration":6019},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"open_main_page","time":{"start":1677428779864,"stop":1677428781724,"duration":1860},"status":"passed","steps":[{"name":"Open page discord.com","time":{"start":1677428779864,"stop":1677428781724,"duration":1860},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"testStage":{"status":"failed","statusMessage":"selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 4s, while waiting for:\nbrowser.element(('css selector', \"[class*='footer']\")).element(('css selector', \"[href='/developers/docs']\")).has exact text Developers\n\nReason: NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[href='/developers/docs']\"}\n  (Session info: chrome=110.0.5481.100)\nStacktrace:\n#0 0x556e80322d93 <unknown>\n#1 0x556e800f12d7 <unknown>\n#2 0x556e8012dcaa <unknown>\n#3 0x556e8012ddb1 <unknown>\n#4 0x556e80122986 <unknown>\n#5 0x556e8015161d <unknown>\n#6 0x556e80122873 <unknown>\n#7 0x556e8015181e <unknown>\n#8 0x556e80169619 <unknown>\n#9 0x556e80151353 <unknown>\n#10 0x556e80120e40 <unknown>\n#11 0x556e80122038 <unknown>\n#12 0x556e803768be <unknown>\n#13 0x556e8037a8f0 <unknown>\n#14 0x556e8035af90 <unknown>\n#15 0x556e8037bb7d <unknown>\n#16 0x556e8034c578 <unknown>\n#17 0x556e803a0348 <unknown>\n#18 0x556e803a04d6 <unknown>\n#19 0x556e803ba341 <unknown>\n#20 0x7f286b630b43 <unknown>\n\nScreenshot: file:///home/runner/.selene/screenshots/1677428773446/1677428773448.png\nPageSource: file:///home/runner/.selene/screenshots/1677428773446/1677428773448.html","statusTrace":"self = <selene.core.wait.Wait object at 0x7fa67a740fd0>\nfn = <selene.core.conditions.ElementCondition object at 0x7fa67a740f10>\n\n    def for_(self, fn: Callable[[E], R]) -> R:\n        finish_time = time.time() + self._timeout\n    \n        while True:\n            try:\n>               return fn(self._entity)\n\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selene/core/wait.py:102: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selene.core.conditions.ElementCondition object at 0x7fa67a740f10>\nentity = <selene.core.entity.Element object at 0x7fa67aa9dfc0>\n\n    def __call__(self, entity: E) -> None:\n>       return self._fn(entity)\n\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selene/core/condition.py:151: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nentity = <selene.core.entity.Element object at 0x7fa67aa9dfc0>\n\n    def fn(entity: E) -> None:\n        query_to_str = str(query)\n        result = (\n            query.__name__\n            if query_to_str.startswith('<function')\n            else query_to_str\n        )\n>       actual = query(entity)\n\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selene/core/condition.py:122: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selene.core.wait.Query object at 0x7fa67ae1b880>\nentity = <selene.core.entity.Element object at 0x7fa67aa9dfc0>\n\n    def __call__(self, entity: T) -> R:\n>       return self._fn(entity)\n\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selene/core/wait.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nelement = <selene.core.entity.Element object at 0x7fa67aa9dfc0>\n\n>   text: Query[Element, str] = Query('text', lambda element: element().text)\n\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selene/core/query.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selene.core.entity.Element object at 0x7fa67aa9dfc0>\n\n    def __call__(self) -> WebElement:\n>       return self._locator()\n\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selene/core/entity.py:178: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selene.core.locator.Locator object at 0x7fa67aa9db70>\n\n    def __call__(self) -> T:\n>       return self._locate()\n\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selene/core/locator.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>       Locator(f'{self}.element({by})', lambda: self().find_element(*by)),\n        self.config,\n    )\n\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selene/core/entity.py:231: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.webelement.WebElement (session=\"25fd33bd0fe8ea49be1a4a95a5ff8f54\", element=\"0e34a2f6-0799-488e-90b1-d7f1cbd07b59\")>\nby = 'css selector', value = \"[href='/developers/docs']\"\n\n    def find_element(self, by=By.ID, value=None):\n        \"\"\"\n        Find an element given a By strategy and locator.\n    \n        :Usage:\n            ::\n    \n                element = element.find_element(By.ID, 'foo')\n    \n        :rtype: WebElement\n        \"\"\"\n        if by == By.ID:\n            by = By.CSS_SELECTOR\n            value = '[id=\"%s\"]' % value\n        elif by == By.CLASS_NAME:\n            by = By.CSS_SELECTOR\n            value = \".%s\" % value\n        elif by == By.NAME:\n            by = By.CSS_SELECTOR\n            value = '[name=\"%s\"]' % value\n    \n>       return self._execute(Command.FIND_CHILD_ELEMENT,\n                             {\"using\": by, \"value\": value})['value']\n\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:796: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.webelement.WebElement (session=\"25fd33bd0fe8ea49be1a4a95a5ff8f54\", element=\"0e34a2f6-0799-488e-90b1-d7f1cbd07b59\")>\ncommand = 'findChildElement'\nparams = {'id': '0e34a2f6-0799-488e-90b1-d7f1cbd07b59', 'sessionId': '25fd33bd0fe8ea49be1a4a95a5ff8f54', 'using': 'css selector', 'value': \"[href='/developers/docs']\"}\n\n    def _execute(self, command, params=None):\n        \"\"\"Executes a command against the underlying HTML element.\n    \n        Args:\n          command: The name of the command to _execute as a string.\n          params: A dictionary of named parameters to send with the command.\n    \n        Returns:\n          The command's JSON response loaded into a dictionary object.\n        \"\"\"\n        if not params:\n            params = {}\n        params['id'] = self._id\n>       return self._parent.execute(command, params)\n\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:773: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.webdriver.WebDriver (session=\"25fd33bd0fe8ea49be1a4a95a5ff8f54\")>\ndriver_command = 'findChildElement'\nparams = {'id': '0e34a2f6-0799-488e-90b1-d7f1cbd07b59', 'using': 'css selector', 'value': \"[href='/developers/docs']\"}\n\n    def execute(self, driver_command: str, params: dict = None) -> dict:\n        \"\"\"\n        Sends a command to be executed by a command.CommandExecutor.\n    \n        :Args:\n         - driver_command: The name of the command to execute as a string.\n         - params: A dictionary of named parameters to send with the command.\n    \n        :Returns:\n          The command's JSON response loaded into a dictionary object.\n        \"\"\"\n        if self.session_id:\n            if not params:\n                params = {'sessionId': self.session_id}\n            elif 'sessionId' not in params:\n                params['sessionId'] = self.session_id\n    \n        params = self._wrap_value(params)\n        response = self.command_executor.execute(driver_command, params)\n        if response:\n>           self.error_handler.check_response(response)\n\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:430: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fa67aa85240>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#18 0x556e803a04d6 \\\\u003Cunknown>\\\\n#19 0x556e803ba341 \\\\u003Cunknown>\\\\n#20 0x7f286b630b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[href='/developers/docs']\"}\nE         (Session info: chrome=110.0.5481.100)\nE       Stacktrace:\nE       #0 0x556e80322d93 <unknown>\nE       #1 0x556e800f12d7 <unknown>\nE       #2 0x556e8012dcaa <unknown>\nE       #3 0x556e8012ddb1 <unknown>\nE       #4 0x556e80122986 <unknown>\nE       #5 0x556e8015161d <unknown>\nE       #6 0x556e80122873 <unknown>\nE       #7 0x556e8015181e <unknown>\nE       #8 0x556e80169619 <unknown>\nE       #9 0x556e80151353 <unknown>\nE       #10 0x556e80120e40 <unknown>\nE       #11 0x556e80122038 <unknown>\nE       #12 0x556e803768be <unknown>\nE       #13 0x556e8037a8f0 <unknown>\nE       #14 0x556e8035af90 <unknown>\nE       #15 0x556e8037bb7d <unknown>\nE       #16 0x556e8034c578 <unknown>\nE       #17 0x556e803a0348 <unknown>\nE       #18 0x556e803a04d6 <unknown>\nE       #19 0x556e803ba341 <unknown>\nE       #20 0x7f286b630b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:247: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.ui.test_footer_elements_visibility.TestFooterElementsVisibility object at 0x7fa67aabbca0>\nopen_main_page = None\n\n    @allure.severity('Blocker')\n    @allure.label(\"owner\", \"uraniumcore238\")\n    @allure.story('Visibility elements on discord.com page')\n    def test_desktop_visibility_footer_developers(self, open_main_page):\n        with allure.step('Assert text in element'):\n>           BasePage.assert_exact_text_in_element(self, MainPage.developers_footer, 'Developers')\n\ntests/ui/test_footer_elements_visibility.py:98: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/base_page.py:14: in assert_exact_text_in_element\n    el.should(have.exact_text(text))\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selene/core/entity.py:539: in should\n    super().should(condition)\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selene/core/entity.py:126: in should\n    self.wait.for_(condition)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selene.core.wait.Wait object at 0x7fa67a740fd0>\nfn = <selene.core.conditions.ElementCondition object at 0x7fa67a740f10>\n\n        def for_(self, fn: Callable[[E], R]) -> R:\n            finish_time = time.time() + self._timeout\n    \n            while True:\n                try:\n                    return fn(self._entity)\n                except Exception as reason:\n                    if time.time() > finish_time:\n    \n                        reason_message = str(reason)\n    \n                        reason_string = '{name}: {message}'.format(\n                            name=reason.__class__.__name__, message=reason_message\n                        )\n                        # todo: think on how can we improve logging failures in selene, e.g. reverse msg and stacktrace\n                        # stacktrace = getattr(reason, 'stacktrace', None)\n                        timeout = self._timeout\n                        entity = self._entity\n    \n                        failure = TimeoutException(\n                            f'''\n    \n    Timed out after {timeout}s, while waiting for:\n    {entity}.{fn}\n    \n    Reason: {reason_string}'''\n                        )\n    \n>                       raise self._hook_failure(failure)\nE                       selene.core.exceptions.TimeoutException: Message: \nE                       \nE                       Timed out after 4s, while waiting for:\nE                       browser.element(('css selector', \"[class*='footer']\")).element(('css selector', \"[href='/developers/docs']\")).has exact text Developers\nE                       \nE                       Reason: NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[href='/developers/docs']\"}\nE                         (Session info: chrome=110.0.5481.100)\nE                       Stacktrace:\nE                       #0 0x556e80322d93 <unknown>\nE                       #1 0x556e800f12d7 <unknown>\nE                       #2 0x556e8012dcaa <unknown>\nE                       #3 0x556e8012ddb1 <unknown>\nE                       #4 0x556e80122986 <unknown>\nE                       #5 0x556e8015161d <unknown>\nE                       #6 0x556e80122873 <unknown>\nE                       #7 0x556e8015181e <unknown>\nE                       #8 0x556e80169619 <unknown>\nE                       #9 0x556e80151353 <unknown>\nE                       #10 0x556e80120e40 <unknown>\nE                       #11 0x556e80122038 <unknown>\nE                       #12 0x556e803768be <unknown>\nE                       #13 0x556e8037a8f0 <unknown>\nE                       #14 0x556e8035af90 <unknown>\nE                       #15 0x556e8037bb7d <unknown>\nE                       #16 0x556e8034c578 <unknown>\nE                       #17 0x556e803a0348 <unknown>\nE                       #18 0x556e803a04d6 <unknown>\nE                       #19 0x556e803ba341 <unknown>\nE                       #20 0x7f286b630b43 <unknown>\nE                       \nE                       Screenshot: file:///home/runner/.selene/screenshots/1677428773446/1677428773448.png\nE                       PageSource: file:///home/runner/.selene/screenshots/1677428773446/1677428773448.html\n\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selene/core/wait.py:125: TimeoutException","steps":[{"name":"Assert text in element","time":{"start":1677428787435,"stop":1677428791676,"duration":4241},"status":"failed","statusMessage":"selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 4s, while waiting for:\nbrowser.element(('css selector', \"[class*='footer']\")).element(('css selector', \"[href='/developers/docs']\")).has exact text Developers\n\nReason: NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[href='/developers/docs']\"}\n  (Session info: chrome=110.0.5481.100)\nStacktrace:\n#0 0x556e80322d93 <unknown>\n#1 0x556e800f12d7 <unknown>\n#2 0x556e8012dcaa <unknown>\n#3 0x556e8012ddb1 <unknown>\n#4 0x556e80122986 <unknown>\n#5 0x556e8015161d <unknown>\n#6 0x556e80122873 <unknown>\n#7 0x556e8015181e <unknown>\n#8 0x556e80169619 <unknown>\n#9 0x556e80151353 <unknown>\n#10 0x556e80120e40 <unknown>\n#11 0x556e80122038 <unknown>\n#12 0x556e803768be <unknown>\n#13 0x556e8037a8f0 <unknown>\n#14 0x556e8035af90 <unknown>\n#15 0x556e8037bb7d <unknown>\n#16 0x556e8034c578 <unknown>\n#17 0x556e803a0348 <unknown>\n#18 0x556e803a04d6 <unknown>\n#19 0x556e803ba341 <unknown>\n#20 0x7f286b630b43 <unknown>\n\nScreenshot: file:///home/runner/.selene/screenshots/1677428773446/1677428773448.png\nPageSource: file:///home/runner/.selene/screenshots/1677428773446/1677428773448.html\n\n","statusTrace":"  File \"/home/runner/work/discord/discord/tests/ui/test_footer_elements_visibility.py\", line 98, in test_desktop_visibility_footer_developers\n    BasePage.assert_exact_text_in_element(self, MainPage.developers_footer, 'Developers')\n  File \"/home/runner/work/discord/discord/pages/base_page.py\", line 14, in assert_exact_text_in_element\n    el.should(have.exact_text(text))\n  File \"/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selene/core/entity.py\", line 539, in should\n    super().should(condition)\n  File \"/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selene/core/entity.py\", line 126, in should\n    self.wait.for_(condition)\n  File \"/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selene/core/wait.py\", line 125, in for_\n    raise self._hook_failure(failure)\n","steps":[{"name":"Element browser.element(('css selector', \"[class*='footer']\")).element(('css selector', \"[href='/developers/docs']\")) should have text - Developers","time":{"start":1677428787435,"stop":1677428791675,"duration":4240},"status":"failed","statusMessage":"selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 4s, while waiting for:\nbrowser.element(('css selector', \"[class*='footer']\")).element(('css selector', \"[href='/developers/docs']\")).has exact text Developers\n\nReason: NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[href='/developers/docs']\"}\n  (Session info: chrome=110.0.5481.100)\nStacktrace:\n#0 0x556e80322d93 <unknown>\n#1 0x556e800f12d7 <unknown>\n#2 0x556e8012dcaa <unknown>\n#3 0x556e8012ddb1 <unknown>\n#4 0x556e80122986 <unknown>\n#5 0x556e8015161d <unknown>\n#6 0x556e80122873 <unknown>\n#7 0x556e8015181e <unknown>\n#8 0x556e80169619 <unknown>\n#9 0x556e80151353 <unknown>\n#10 0x556e80120e40 <unknown>\n#11 0x556e80122038 <unknown>\n#12 0x556e803768be <unknown>\n#13 0x556e8037a8f0 <unknown>\n#14 0x556e8035af90 <unknown>\n#15 0x556e8037bb7d <unknown>\n#16 0x556e8034c578 <unknown>\n#17 0x556e803a0348 <unknown>\n#18 0x556e803a04d6 <unknown>\n#19 0x556e803ba341 <unknown>\n#20 0x7f286b630b43 <unknown>\n\nScreenshot: file:///home/runner/.selene/screenshots/1677428773446/1677428773448.png\nPageSource: file:///home/runner/.selene/screenshots/1677428773446/1677428773448.html\n\n","statusTrace":"  File \"/home/runner/work/discord/discord/pages/base_page.py\", line 14, in assert_exact_text_in_element\n    el.should(have.exact_text(text))\n  File \"/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selene/core/entity.py\", line 539, in should\n    super().should(condition)\n  File \"/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selene/core/entity.py\", line 126, in should\n    self.wait.for_(condition)\n  File \"/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selene/core/wait.py\", line 125, in for_\n    raise self._hook_failure(failure)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"setup_browser::0","time":{"start":1677428792188,"stop":1677428792483,"duration":295},"status":"passed","steps":[],"attachments":[{"uid":"7cfb6ad6fe71d340","name":"page_source","source":"7cfb6ad6fe71d340.html","type":"text/html","size":74355},{"uid":"b8b3d5591b9bf469","name":"screenshot","source":"b8b3d5591b9bf469.png","type":"image/png","size":253876},{"uid":"95ee715a31e953e0","name":"browser_logs","source":"95ee715a31e953e0.txt","type":"text/plain","size":416},{"uid":"e42f7f370e08f30f","name":"video_25fd33bd0fe8ea49be1a4a95a5ff8f54","source":"e42f7f370e08f30f.html","type":"text/html","size":193}],"parameters":[],"stepsCount":0,"attachmentsCount":4,"shouldDisplayMessage":false,"hasContent":true}],"labels":[{"name":"severity","value":"Blocker"},{"name":"story","value":"Visibility elements on discord.com page"},{"name":"owner","value":"uraniumcore238"},{"name":"parentSuite","value":"tests.ui"},{"name":"suite","value":"test_footer_elements_visibility"},{"name":"subSuite","value":"TestFooterElementsVisibility"},{"name":"host","value":"fv-az502-308"},{"name":"thread","value":"2307-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.ui.test_footer_elements_visibility"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"setup_browser","value":"('1920', '1080')"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"blocker","owner":"uraniumcore238","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"21bf4516764f6235","reportUrl":"https://uraniumcore238.github.io/discord/35//#testresult/21bf4516764f6235","status":"failed","statusDetails":"selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 4s, while waiting for:\nbrowser.element(('css selector', \"[class*='footer']\")).element(('css selector', \"[href='/developers/docs']\")).has exact text Developers\n\nReason: NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[href='/developers/docs']\"}\n  (Session info: chrome=110.0.5481.100)\nStacktrace:\n#0 0x557fe913cd93 <unknown>\n#1 0x557fe8f0b2d7 <unknown>\n#2 0x557fe8f47caa <unknown>\n#3 0x557fe8f47db1 <unknown>\n#4 0x557fe8f3c986 <unknown>\n#5 0x557fe8f6b61d <unknown>\n#6 0x557fe8f3c873 <unknown>\n#7 0x557fe8f6b81e <unknown>\n#8 0x557fe8f83619 <unknown>\n#9 0x557fe8f6b353 <unknown>\n#10 0x557fe8f3ae40 <unknown>\n#11 0x557fe8f3c038 <unknown>\n#12 0x557fe91908be <unknown>\n#13 0x557fe91948f0 <unknown>\n#14 0x557fe9174f90 <unknown>\n#15 0x557fe9195b7d <unknown>\n#16 0x557fe9166578 <unknown>\n#17 0x557fe91ba348 <unknown>\n#18 0x557fe91ba4d6 <unknown>\n#19 0x557fe91d4341 <unknown>\n#20 0x7f7dc8982b43 <unknown>\n\nScreenshot: file:///home/runner/.selene/screenshots/1677424519070/1677424519072.png\nPageSource: file:///home/runner/.selene/screenshots/1677424519070/1677424519072.html","time":{"start":1677424526377,"stop":1677424530570,"duration":4193}},{"uid":"251f61939f14f4ee","reportUrl":"https://uraniumcore238.github.io/discord/34//#testresult/251f61939f14f4ee","status":"broken","statusDetails":"urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='localhost', port=9515): Max retries exceeded with url: /wd/hub/session (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f2bcd6d89d0>: Failed to establish a new connection: [Errno 111] Connection refused'))","time":{"start":1677422691762,"stop":1677422691762,"duration":0}}]},"tags":[]},"source":"1c0b3e279424d254.json","parameterValues":["('1920', '1080')"]}